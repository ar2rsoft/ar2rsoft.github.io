{
    "openapi": "3.1.0",
    "info": {
        "version": "1.0.1",
        "title": "RouteExpress API",
        "description": "How to work with RouteExpress through API"
    },
    "paths": {
        "/collectionMoney/{terminalId}": {
            "post": {
                "summary": "Send signal to terminal that money was collected",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "parameters": [
                {
                    "name": "terminalId",
                    "description": "ID of terminal",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "number"
                    }
                }
            ]
        },
        "/status": {
            "get": {
                "summary": "Get current status of terminals, statistics and exception events (latest sent etc)",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/terminals/change-status": {
            "post": {
                "summary": "Change status of terminal by unique ID",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "ID of terminal",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "number"
                    }
                },
                {
                    "name": "status",
                    "description": "Actual status of terminal",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ]
                    }
                },
                {
                    "name": "force",
                    "description": "Force change status of terminal even it already have a statistics on another port. Statistic will be restarted",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }
            ]
        },
        "/terminals/list": {
            "get": {
                "summary": "Get list of terminals with status",
                "responses": {
                    "200": {
                        "description": "List of terminals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Terminals"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No terminals found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "webhooks": {
        "webhook": {
            "post": {
                "requestBody": {
                    "description": "Callback when cash outed",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhook"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the statistic data was received successfully"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Webhook": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Statistic"
                        }
                    },
                    "terminals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Terminal"
                        }
                    },
                    "exceptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        }
                    },
                    "shifts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shift"
                        }
                    }
                }
            },
            "Shift": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "101"
                    },
                    "start": {
                        "type": "date-time",
                        "example": "2022-12-11 10:00:00"
                    },
                    "end": {
                        "type": "date-time",
                        "example": "2022-12-12 12:10:00"
                    }
                }
            },
            "CashOut": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "integer",
                        "example": 1500
                    },
                    "created_at": {
                        "type": "date-time",
                        "example": "2022-12-12"
                    }
                }
            },
            "Event": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "required": true
                    },
                    "terminal_id": {
                        "type": "integer",
                        "required": true
                    },
                    "hint": {
                        "type": "string",
                        "required": true,
                        "enum": [
                            'CardCageWasOpened',
                            'CardCageWasClosed',
                            'ACPowerWasApplied',
                            'ACPowerWasLost',
                            'LowBackupBatteryDetected',
                            'OperatorChangedOptions',
                            'CashOutTicketHasBeenPrinted',
                            'HandpayHasBeenValidated',
                            'ValidationIDNotConfigured',
                            'HandpayIsPending',
                            'HandpayWasReset',
                            'PrinterPaperOutError',
                            'CashOutButtonPressed',
                            'TicketHasBeenInserted',
                            'TicketTransferCompleted',
                            'ExceptionBufferOverflow',
                            'MachineSoftMetersResetToZero',
                            'PowerOffCardCageAccess'
                        ]
                    }
                }
            },
            "Statistic": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "required": true
                    },
                    "meter": {
                        "type": "string",
                        "required": true,
                        "example": "TotalCoinIn"
                    },
                    "value": {
                        "type": "string",
                        "required": true,
                        "example": 1200
                    },
                    "game_id": {
                        "type": "integer",
                        "required": true
                    },
                    "terminal_id": {
                        "type": "integer",
                        "required": true
                    },
                    "shift_id": {
                        "type": "integer",
                        "required": true
                    }
                }
            },
            "Terminal": {
                "type": "object",
                "required": [
                    "id",
                    "uniqueId",
                    "alias",
                    "serial",
                    "comPort",
                    "connected",
                    "configured",
                    "status",
                    "archived"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique ID of terminal"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ]
                    },
                    "uniqeuId": {
                        "type": "string"
                    },
                    "serial": {
                        "type": "string",
                        "example": "ABCD-ABCD-ABCD-ABCD"
                    },
                    "comPort": {
                        "type": "string",
                        "example": "/dev/ttyS0"
                    },
                    "connected": {
                        "type": "boolean"
                    },
                    "configured": {
                        "type": "boolean"
                    },
                    "archived": {
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "Terminals": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Terminal"
                }
            },
            "Error": {
                "type": "object",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "description": "A human readable error message",
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "ApiKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-Api-Key"
            }
        }
    },
    "security": [
        {
            "ApiKey": []
        }
    ]
}